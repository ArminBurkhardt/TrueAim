/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

def legui_version = '4.2.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://raw.github.com/SpinyOwl/repo/releases" }             // :/
    maven { url "https://raw.githubusercontent.com/SpinyOwl/repo/releases" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation "org.lwjgl:lwjgl:3.3.6"
    implementation "org.lwjgl:lwjgl-glfw:3.3.6"
    implementation "org.lwjgl:lwjgl-opengl:3.3.6"
    implementation "org.lwjgl:lwjgl-openal:3.2.3" // OpenAL f√ºr Sound
    implementation 'org.joml:joml:1.10.3'
    implementation "org.lwjgl:lwjgl-nanovg:3.3.6" // Obwohl das schon in legui enthalten ist, FUNKTIONIERT ES SONST NICHT?
    // LEGUI - https://github.com/SpinyOwl/legui
    implementation group: 'com.spinyowl', name: 'legui', version: legui_version, changing: true
    // SpinyGUI - https://github.com/SpinyOwl/SpinyGUI/tree/develop
    implementation 'com.github.SpinyOwl:SpinyGUI:develop'


    //repo nicht in Maven Central, brauchen wir eig. auch nicht
    //implementation "org.lwjgl:lwjgl-glu:3.3.6"

    runtimeOnly "org.lwjgl:lwjgl:3.3.6:natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-glfw:3.3.6:natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-opengl:3.3.6:natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-openal:3.2.3:natives-windows"


    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.trueaim.AimTrainer'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
